package com.java8.lambda.chapter8;

/**
 * 	模板方法模式
 *	
 *	开发软件时一个常见的情况是有一个通用的算法，只是步骤上略有不同。
 *	我们希望不同的实现能够遵守通用模式，保证它们使用了同一个算法，也是为了让代码更加易读。
 *	一旦你从整体上理解了算法，就能更容易理解其各种实现。
 *
 *	模板方法模式是为这些情况设计的：
 *	整体算法的设计是一个抽象类，它有一系列抽象方法，代表算法中可被定制的步骤，同时这个类中包含了一些通用代码。
 *	算法的每一个变种由具体的类实现，它们重写了抽象方法，提供了相应的实现。
 *
 *	@author hzweiyongqiang
 */
public class Course14TemplateMethodPattern {
	/**
	 * 	假设我们是一家银行，需要对公众、公司和职员放贷。
	 * 	放贷程序大体一致——验明身份、信用记录和收入记录。
	 * 	这些信息来源不一，衡量标准也不一样。
	 * 	你可以查看一个家庭的账单来核对个人身份；公司都在官方机构注册过，比如美国的 SEC、英国的 Companies House。
	 */
	
	/**
	 * 	一、
	 * 	使用传统方式实现模板方法模式：见 Course14TemplateMethodPattern1 类。
	 * 
	 * 	二、
	 * 	使用 Lambda 表达式实现模板方法模式：见 Course14TemplateMethodPattern2 类。
	 */
}
